{"version":3,"file":"static/js/367.ece15e19.chunk.js","mappings":"sMA8CA,UA1CqB,WACjB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAejB,OACI,iCACI,kBAAMC,SAfY,SAAAC,GACtBA,EAAIC,iBACiB,KAAjBR,EAAMS,SAKVC,EAAAA,EAAAA,IAAmBV,GACdW,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAAUS,EAA3B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAChBb,EAAS,KAPLc,QAAQC,IAAI,sBAQnB,EAIO,WACI,kBACIC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,yBACZC,MAAOrB,EACPsB,SAAU,SAAAf,GAAG,OAAIN,EAASM,EAAIgB,cAAcF,MAAMG,cAArC,KAEjB,mBAAQP,KAAK,SAAb,UACI,2CAIR,wBACKf,EAAOuB,KAAI,SAAAC,GAAK,OAAI,yBAAmB,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAOzB,EAAhC,SAA2CsB,EAAMI,SAA3DJ,EAAME,GAAnB,QAIhC,C,oHC1CKG,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,6BAElB,IAAMC,EAAc,WACvB,OAAOD,EAAAA,EAAAA,IAEE,yBAA0B,CAC3BE,OAAQ,CACJC,QAASJ,KAGpBpB,MAAK,SAAAyB,GAAM,OAAIA,EAAOC,IAAX,GACf,EAEY3B,EAAqB,SAACV,GAC/B,OAAOgC,EAAAA,EAAAA,IAEE,kBAAmB,CACxBE,OAAQ,CACJC,QAASJ,EACT/B,MAAAA,EACAsC,eAAe,KAGtB3B,MAAK,SAAAyB,GAAM,OAAIA,EAAOC,IAAX,GACf,EAEYE,EAAkB,SAACX,GAAuB,IAAnBY,EAAkB,uDAAT,KACzC,OAAOR,EAAAA,EAAAA,IAAA,mBAIcJ,GAJd,OAImBY,EAAM,WAAOA,GAAW,IAAM,CAChDN,OAAQ,CACJC,QAASJ,KAGZpB,MAAK,SAAAyB,GAAM,OAAIA,EAAOC,IAAX,GACvB,C","sources":["components/Movies/SearchMovies.jsx","services/tmdbAPI.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { searchMovieByQuery } from \"services/tmdbAPI\";\n\nconst SearchMovies = () => {\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n\n    const location = useLocation();\n\n    const handleQuerySubmit = evt => {\n        evt.preventDefault();\n        if (query.trim() === '') {\n            console.log(\"Enter search query!\");\n            return;\n        };\n\n        searchMovieByQuery(query)\n            .then(({ results }) => setMovies(results))\n            .catch(error => console.log(error));\n        setQuery('');\n    };\n    \n    return (\n        <>\n            <form onSubmit={handleQuerySubmit}>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies by title\"\n                    value={query}\n                    onChange={evt => setQuery(evt.currentTarget.value.toLowerCase())}\n                />\n                <button type=\"submit\">\n                    <span>Search</span>\n                </button>\n                \n            </form>\n            <ul>\n                {movies.map(movie => <li key={movie.id}><Link to={`${movie.id}`} state={location}>{movie.title}</Link></li>)}\n            </ul>\n        </>\n    );\n};\n \nexport default SearchMovies;","import axios from \"axios\";\n\nconst API_KEY = '62b98c2ee90b8cb7c57f2d936e771a35';\n\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\n\nexport const getFromTmdb = () => {\n    return axios\n        // https://api.themoviedb.org/3/trending/movie/week?api_key=62b98c2ee90b8cb7c57f2d936e771a35\n        .get('/3/trending/movie/week', {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n    .then(result => result.data)\n};\n\nexport const searchMovieByQuery = (query) => {\n    return axios\n        // https://api.themoviedb.org/3/search/movie?api_key=62b98c2ee90b8cb7c57f2d936e771a35&query=avatar&include_adult=true\n        .get('/3/search/movie', {\n        params: {\n            api_key: API_KEY,\n            query,\n            include_adult: true\n        }\n        })\n    .then(result => result.data)\n}\n\nexport const getMovieDetails = (id, option = null) => {\n    return axios\n        // https://api.themoviedb.org/3/movie/76600?api_key=62b98c2ee90b8cb7c57f2d936e771a35\n        // https://api.themoviedb.org/3/movie/638974/credits?api_key=62b98c2ee90b8cb7c57f2d936e771a35 - cast\n        // https://api.themoviedb.org/3/movie/638974/reviews?api_key=62b98c2ee90b8cb7c57f2d936e771a35 - reviews\n        .get(`/3/movie/${id}${option ? `/${option}` : ''}`, {\n            params: {\n                api_key: API_KEY,\n            }\n            })\n            .then(result => result.data)\n}"],"names":["useState","query","setQuery","movies","setMovies","location","useLocation","onSubmit","evt","preventDefault","trim","searchMovieByQuery","then","results","catch","error","console","log","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","map","movie","to","id","state","title","API_KEY","axios","getFromTmdb","params","api_key","result","data","include_adult","getMovieDetails","option"],"sourceRoot":""}